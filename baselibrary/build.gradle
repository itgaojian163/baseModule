apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion rootProject.ext.gCompileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.gMinSdkVersion
        targetSdkVersion rootProject.ext.gTargetSdkVersion
        versionCode rootProject.ext.gVersionCode
        versionName rootProject.ext.gVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME  : project.getName(),
                             "room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    viewBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    //noinspection GradleCompatible
    api "com.android.support:design:$rootProject.ext.gAppcompatVersion_v7"
    //okhttp3
    api "com.squareup.okhttp3:okhttp:$rootProject.ext.gOkHttp3Version"
    //Gson
    api "com.google.code.gson:gson:$rootProject.ext.gGsonVersion"
    //Arouter
    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.ext.gRouterCompileVersion"
    api "com.alibaba:arouter-api:$rootProject.ext.gRouterApiVersion"
    //Retrofit2
    api "com.squareup.retrofit2:retrofit:$rootProject.ext.gRetrofitVersion"
    api "com.squareup.retrofit2:converter-gson:$rootProject.ext.gRetrofitVersion"
    api "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.gRetrofitVersion"
    //Rxjava
    api "io.reactivex.rxjava2:rxjava:$rootProject.ext.gRxJavaVersion"
    api "io.reactivex.rxjava2:rxandroid:$rootProject.ext.gRxAndroid"
    //Glide
    api "com.github.bumptech.glide:glide:$rootProject.ext.gGlideVersion"
    //recyclerview
    api "com.android.support:recyclerview-v7:$rootProject.ext.gAppcompatVersion_v7"
    //选择器
    api "com.contrarywind:Android-PickerView:$rootProject.ext.gPickerViewVersion"
    api "com.contrarywind:wheelview:${rootProject.ext.gWheelVersion}"
    api "com.nightonke:boommenu:$rootProject.ext.gBoomMenu"
    //Room
    api "androidx.room:room-runtime:$rootProject.ext.gRoomVersion"
    api "androidx.room:room-rxjava2:$rootProject.ext.gRoomVersion"
    annotationProcessor "androidx.room:room-compiler:$rootProject.ext.gRoomVersion"


}
version = "0.0.4"
group = "com.tengshisoft.baseLibrary"
def siteUrl = 'https://github.com/itgaojian163/baseModule'
def gitUrl = 'https://github.com/itgaojian163/baseModule.git'


install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'// 打包的类型
                name 'baseModule'//项目名称
                description '项目基础库'// 项目的描述
                url siteUrl// 项目的主页
                // 配置开源证书信息
                licenses {
                    license {
                        name 'The Apache software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                // 配置开发者信息
                developers {
                    developer {
                        id 'itgaojian163'
                        name 'itgaojian163'
                        email 'zghgaojian@sina.com'
                    }
                }
                // 软件配置管理信息
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
//生成对应的source.jar
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
//生成java doc文件
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
    // 忽略注释语法错误，如果用jdk1.8你的注释写的不规范就编译不过。
}
//生成对应的javadoc.jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
// 读取配置的bintray用户的信息
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
// 配置bintray的信息
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "baseModule"//在bintray上边建立的仓库名字
        name = "baseModule"//在bintray上Package名字
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        labels = ['android'] // 设置标签
        licenses = ["Apache-2.0"]
        publish = true
    }
}
//javadoc生成的时候使用GBK编码，而项目使用的UTF-8编码。就需要加入以下代码
javadoc {
    options {
        encoding 'UTF-8'
        charSet 'UTF-8'
        author true
    }
}

